basePath: /
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        example: Invalid input
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: secret123
        type: string
    required:
    - email
    - password
    type: object
  controllers.LoginResponse:
    properties:
      token:
        example: your.jwt.token
        type: string
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: secret123
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  controllers.RegisterResponse:
    properties:
      token:
        example: your.jwt.token
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a SkillSwap API server.
  title: SkillSwap API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Login a user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user and return a JWT token
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
swagger: "2.0"
